<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="e027093b-f9e0-4f2d-9f52-fe7b8cea8fb1" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/go.sum" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FavoritesManager">
    <favorites_list name="go-alibp2p" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" path="/usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="MacroExpansionManager">
    <option name="directoryName" value="dvPUprxv" />
  </component>
  <component name="ProjectId" id="1RjYVuYmEzP1iFgduXGlULlUubv" />
  <component name="PropertiesComponent">
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="GO_FMT" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="configurable.Global.GOPATH.is.expanded" value="true" />
    <property name="configurable.Module.GOPATH.is.expanded" value="false" />
    <property name="configurable.Project.GOPATH.is.expanded" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.tried.to.enable.integration.vgo.integrator" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.path.for.package.eslint" value="project" />
    <property name="node.js.path.for.package.tslint" value="project" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="settings.editor.selected.configurable" value="com.goide.configuration.GoLibrariesConfigurableProvider" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/cmd" />
      <recent name="$PROJECT_DIR$/libs" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Go Test.TestID in github.com/cc14514/go-alibp2p">
    <configuration name="go build github.com/cc14514/go-alibp2p/cmd" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="go-alibp2p" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <filePath value="$PROJECT_DIR$/cmd/main.go" />
      <package value="github.com/cc14514/go-alibp2p/cmd" />
      <directory value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration name="TestApi in github.com/cc14514/go-alibp2p/cmd" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-alibp2p" />
      <working_directory value="$PROJECT_DIR$/cmd" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/cc14514/go-alibp2p/cmd" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/" />
      <pattern value="^TestApi$" />
      <method v="2" />
    </configuration>
    <configuration name="TestApiPost in github.com/cc14514/go-alibp2p/cmd" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-alibp2p" />
      <working_directory value="$PROJECT_DIR$/cmd" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/cc14514/go-alibp2p/cmd" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/" />
      <pattern value="^TestApiPost$" />
      <method v="2" />
    </configuration>
    <configuration name="TestID in github.com/cc14514/go-alibp2p" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-alibp2p" />
      <working_directory value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/cc14514/go-alibp2p" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/" />
      <pattern value="^TestID$" />
      <method v="2" />
    </configuration>
    <configuration name="TestPSK in github.com/cc14514/go-alibp2p" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-alibp2p" />
      <working_directory value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/cc14514/go-alibp2p" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/" />
      <pattern value="^TestPSK$" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestID in github.com/cc14514/go-alibp2p" />
        <item itemvalue="Go Test.TestApiPost in github.com/cc14514/go-alibp2p/cmd" />
        <item itemvalue="Go Test.TestApi in github.com/cc14514/go-alibp2p/cmd" />
        <item itemvalue="Go Test.TestPSK in github.com/cc14514/go-alibp2p" />
        <item itemvalue="Go Build.go build github.com/cc14514/go-alibp2p/cmd" />
      </list>
    </recent_temporary>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_ORDER" />
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="networkid" />
    <MESSAGE value="rpcapi : echo" />
    <MESSAGE value="增加 put/get api" />
    <MESSAGE value="增加 attach" />
    <MESSAGE value="set default bootnode" />
    <MESSAGE value="myid" />
    <MESSAGE value="功能调整，与日志清理" />
    <MESSAGE value="clean log" />
    <MESSAGE value="增加 log" />
    <MESSAGE value="readme" />
    <MESSAGE value="修正 bootstrap 逻辑" />
    <MESSAGE value="debug" />
    <option name="LAST_COMMIT_MESSAGE" value="debug" />
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
    <proxy>https://goproxy.io</proxy>
  </component>
</project>